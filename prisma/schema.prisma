// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// Query D1 using Prisma ORM: 
// https://developers.cloudflare.com/d1/tutorials/d1-and-prisma-orm/

// pnpm wrangler d1 migrations create rsDb __YOUR_TABLE_NAME__

// pnpm npx prisma migrate diff \
//   --from-local-d1 \
//   --to-schema-datamodel ./prisma/schema.prisma \
//   --script \
//   --output migrations/__YOUR_TABLE_SQL

// pnpm wrangler d1 migrations apply __YOUR_DATABASE_NAME__ --local
// pnpm wrangler d1 migrations apply __YOUR_DATABASE_NAME__ --remote
// pnpm wrangler d1 migrations apply __YOUR_DATABASE_NAME__ --remote --preview
// pnpm prisma generate

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model System {
  id       Int    @id @default(autoincrement())
  name     String @unique
  template String

  Stories Story[]
}

model Rules {
  id       Int    @id @default(autoincrement())
  template String

  chapter   Chapter @relation(fields: [chapterId], references: [id], onDelete: Cascade)
  chapterId Int
}

model Chapter {
  id       Int     @id @default(autoincrement())
  name     String
  template String
  rules    Rules[]

  Story    Story?  @relation(fields: [storyId], references: [id])
  storyId  Int?
}

model Story {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  system   System? @relation(fields: [systemId], references: [id], onDelete: SetNull)
  systemId Int?

  chapters Chapter[]
  sessions Session[]
}

model Message {
  id      Int    @id @default(autoincrement())
  role    String
  content String

  createdAt DateTime

  session   Session @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId Int
}

model Session {
  id Int @id @default(autoincrement())

  story   Story? @relation(fields: [storyId], references: [id], onDelete: SetNull)
  storyId Int?

  messages Message[]
}
