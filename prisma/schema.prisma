// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// Query D1 using Prisma ORM: 
// https://developers.cloudflare.com/d1/tutorials/d1-and-prisma-orm/

// Create the local D1
// pnpm wrangler d1 migrations create rsDb __YOUR_TABLE_NAME__
// OR restore the EMPTY database from migrations:
// pnpm wrangler d1 migrations apply rsDb

// pnpm npx prisma migrate diff \
//   --from-local-d1 \
//   --to-schema-datamodel ./prisma/schema.prisma \
//   --script \
//   --output migrations/__YOUR_TABLE_SQL

// pnpm wrangler d1 migrations apply __YOUR_DATABASE_NAME__ --local
// pnpm wrangler d1 migrations apply __YOUR_DATABASE_NAME__ --remote
// pnpm wrangler d1 migrations apply __YOUR_DATABASE_NAME__ --remote --preview
// pnpm prisma generate

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Message {
  id      Int    @id @default(autoincrement())
  role    String

  content  String?
  template String?
  entry    Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  chapter   Chapter @relation(fields: [chapterId], references: [id], onDelete: Cascade)
  chapterId Int
}

model Property {
  id Int @id @default(autoincrement())

  name    String
  type    String // property type
  value   String // Raw json obj or Origin Value
  initial String // initial value of the property

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  chapter Chapter? @relation(fields: [chapterId], references: [id], onDelete: Cascade)
  chapterId Int?

  story   Story? @relation(fields: [storyId], references: [id], onDelete: Cascade)
  storyId Int?
}

model Chapter {
  id Int @id @default(autoincrement())

  name        String
  description String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  messages Message[]
  properties Property[] // local properties

  story   Story @relation(fields: [storyId], references: [id], onDelete: Cascade)
  storyId Int
}

model Story {
  id Int @id @default(autoincrement())

  name        String  @unique
  cover       String?
  description String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  chapters    Chapter[]
  properties  Property[] // story properties
}
